
Grundsätzlich: bitte alles in deutsch schreiben, also nicht path oder ähnliches. sich diesen style angewöhnen und treu bleiben!

anderes konzept, bzw. tieferes konzept (mit db tabellenbeschreibung)


dbZiel --> datenbank der vorhandenen bilder
tabelle heißt 'Dateien'

* String			UNCPfad				\\192.168.177.210\Bilder\2016.05\2016.05.10.13.55.55.254.jpg
* String			Dateiname			2016.05.10.13.55.55.254.jpg
* String			Prüfsumme			5dfs186sdf186we5f13sdf

* String			EXIF DateTimeOriginal		Datum1
* String			EXIF DateTimeDigitized		Datum2
* String			Image DateTime				Datum3

* String			1. SpeicherDatumDatei		Datum4
* String			2. SpeicherDatumDatei		Datum4
* String			3. SpeicherDatumDatei		Datum4

* String			EXIF ExifImageWidth			BildBreite
* String			EXIF ExifImageLength		BildLänge

* String			status bild					neu / vorhanden / weg / None,Empty,"",leer (was auch immer)
* String			Field7



db2 --> temporäre Datei
tabelle heißt 'Temp'

* String			UNCPfad				\\192.168.177.210\Bilder\2016.05\DSB237.jpg
* String			Dateiname_alt			DSB237.jpg
* String			Prüfsumme			5dfs186sdf186we5f13sdf

* String			EXIF DateTimeOriginal		Datum1
* String			EXIF DateTimeDigitized		Datum2
* String			Image DateTime				Datum3

* String			1. SpeicherDatumDatei		Datum4
* String			2. SpeicherDatumDatei		Datum4
* String			3. SpeicherDatumDatei		Datum4

* String			EXIF ExifImageWidth			BildBreite
* String			EXIF ExifImageLength		BildLänge

* String			status bild					neu / vorhanden / weg / None,Empty,"",leer (was auch immer)
* String			Field7

#******************************************************************************************************************
detailierteres KOnzept ab 2017.04.13:

- anhand der quellordner werden die bilder eingelesen, abgearbeitet und in TempDB gespeichert.

- nun aus der tempDB lesen:
	daten in zieldb noch nicht vorhanden 
		-> speichern 
		-> bild kopieren
		-> bild umbenennen

	daten in zieldb vorhanden 
		-> nix :)
	
- temp DB leeren!
			
#******************************************************************************************************************




im Programm enthaltene funktionen hier:

ERLEDIGT!
- Ordner Prüfen und erstellen
		Ordner mit YYYY.MM formatierung auf existenz prüfen und ggfs. erstellen
		Übergabe:	Pfad des zukünftigen Ordners
		RÜckgabe:	Erfolgreich erledigt als boolean
		
		gespeichert in: 
		00.OrdnerPruefenUndErstellen.py

ERLEDIGT!
- dateienAuslesen 
		In einem Ornder befindliche Dateien auslesen und als Array zurückgeben
		Übergabe: Pfad des Ordners
		Rückgabe: Array mit dateien
		
		01.DateienAuslesen.py
		
ERLEDIGT!		
- PrüfsummeBerechnen
		Berechnung der Prüfsumme anhand einer Datei
		Übergabe Datei mit Pfad
		Rückgabe: Prüfsumme

		gespeichert in: 
		03.PruefsummeBerechnen.py			
		
	
	- ausDatenbankLesen
		Aus der datenbank lesen - ist die datei mit der prüfsumme vorhanden:
		1. lesen		Übergabe: DatenbankDatei mit Pfad, Prüfsumme
						Rückgabe: Boolean

		gespeichert in: 
		04.AusDatenbankLesen.py			

ERLEDIGT!
	- inDatenbankSchreiben 
		In die datenbank schreiben - schreibe den datensatz in die datenbank
		2. schreiben	Übergabe: DatenbankDatei mit Pfad, Datensatz
						Rückgabe: Boolean

		gespeichert in: 
		05.InDatenbankSchreiben.py			
	
		
ERLEDIGT!		
	- Datei kopieren und umbenennen 
		übergabe: 	Quellpfad der zu kopierenden Datei
					Alter Name der Datei
					Zielpfad der neuen Datei
					Neuer Name der Datei
	
		RÜckgabe:	Erfolgreich erledigt als boolean
	
		gespeichert in: 
		07.DateiKopierenUndUmbenennen.py			
ERLEDIGT!
					
	- Exif Daten lesen
		Exif daten aus einer bilddatei lesen und das datum zurückgeben
		Übergabe:	Datei mit pfad	
		Rückgabe:	datum

		gespeichert in: 
		08.ExifDatenLesen.py
		
ERLEDIGT!
	- Ältestes Datum Finden, das in der datei gespeichert wurde.
		Datum aus erstellungsdatum, änderungsdatum, exif datum finden und zurückgeben
		Übergabe:	Datei mit pfad
		Rückgabe:	Datum

		gespeichert in: 
		09.AeltestesDatumFinden.py			
	
		
ERLEDIGT!
	- iniDateiLesen
		Quell- und Zielpfad aus der ini Datei lesen und zurückgeben
		Übergabe:	Stichwort
		Rückgabe:	Entsprechender String

		gespeichert in: 
		11.IniDateiLesen.py			

ERLEDIGT!		
	- PfadeAuslesen	
		Pfade auslesen und rekursiv nach weiteren pfaden durchsuchen
		Übergabe:	Quellpfad
		Rückgabe:	array mit pfaden
					
		gespeichert in: 
		12.PfadeAuslesen.py			

		
	- datei verkleinern
		- ImageMagickx86 sollte ja implementierbar sein.
		Übergabe: 	datei mit pfad, neuer dateipfad
		RÜckgabe:	Erfolgreich erledigt als boolean

		gespeichert in: 
		10.DateiVerkleinern.py	



--> brauch mer erst mal nicht <--
		
- Dateiexistenz Prüfen
		Datei auf existenz prüfen (ggfs. unnötig)
		Übergabe: Datei mit pfad
		Rückgabe: Boolean
		
		gespeichert in: 
		02.DateiexistenzPruefen.py

		
		
	- Datenbank sichern
		Sichern der Datenbank durch kopieren
		Übergabe:	Datenbankpfad, Sicherungspfad
		rückgabe:	erfolgreich erledigt als boolean

		gespeichert in: 
		06.DatenbankSichern.py		
		
_________________________________________________________________________________________________





_________________________________________________________________________________________________

ostern: doch nciht so ;)

- anhand der quellordner werden die bilder eingelesen und abgearbeitet
	-> wenn das bild in der ZielDB vorhanden ist, wird das wird das Vorhanden flac in der tempDB gesetzt auf stelle 12 (?)
	-> behinhaltet bilder die alt sind und bilder die neu sind.
	-> beinhalet logischerweise nicht die bilder die nicht mehr vorhanden sind.
	status: bild vorhanden -> flac = vorhanden, datensatz ohne bild = leer


- nun aus der tempDB lesen:
	
	-> case flac
		case: neu
			-> daten in zieldb (sofern noch nicht vorhanden) 
				-> speichern 
				-> bild kopieren
				-> bild umbenennen
				-> flac löschen
			-> falls vorhanden 
			
		case: vorhanden			
			-> flac löschen

		case: leer
			-> datensatz aus temp db löschen

#******************************************************************************************************************

alt:
(vor ostern 2017.04.13:)
	erst mal muss eine datenbank (dbZiel)gebaut werden, welche die dateien im zielordner beinhaltet. 
	diese datenbank wird von zeit zu zeit gesichert, bzw. verifiziert. möglich sind hier 2 stufen - die erste mit die 2. ohne Prüfsummenberechnung.
	
	von dieser db gehen wir aus.
	
	jeden tag um 23.00 uhr läuft ein programm, das 
		- checkt, ob ein neuer monat ist und wenn ja, den ordner für den neuen monat anlegt (z.b. 2017.03)
		- die dateien im quellordner liest und in die quellDB schreibt, 
		- dann den dateien in der quellDB eine prüfsumme hinzufügt,
		- dann die quellDB gegen die ZielDB checkt, also die im zielsystem vorhandenen dateien aus der db löscht.
		- dann die dateien aus der quellDB umbenennt und kopiert
		- dann die dateien verkleinert und in ein neues ordnerkonstrukt kopiert (mal sehen)

		
hier die auflistung der tasks mit entsprechenden programmen
	jeden tag um 23.00 uhr läuft ein programm, das 
-----
	- checkt, ob ein neuer monat ist und wenn ja, den ordner für den neuen monat anlegt (z.b. 2017.03)
			- Ordner Prüfen und erstellen
			
-----	1011	
		- die dateien im quellordner liest und in die quellDB schreibt,
			- iniDateiLesen
			- PfadeAuslesen
			- dateienAuslesen 
			- PrüfsummeBerechnen
			- DatenbankSchreiben

-----	1011	

		- dann den dateien in der quellDB eine prüfsumme hinzufügt,
			- DatenbankLesen
			- PrüfsummeBerechnen
			- DatenbankSchreiben
		
			
-----	

		- dann die quellDB gegen die ZielDB checkt, also die im zielsystem vorhandenen dateien aus der db löscht.
			- DatenbankLesen
			- DatenbankSchreiben		
			
-----		

		- dann die dateien aus der quellDB umbenennt und kopiert
			- Exif Daten lesen
			- Ältestes Datum Finden, das in der datei gespeichert wurde.
			- Datei kopieren und umbenennen
			
-----		

		- dann die dateien verkleinert und in ein neues ordnerkonstrukt kopiert (mal sehen)
			- datei verkleinern









'alte texte:
//boa ey:
	dateien auf existenz prüfen und ggfs. entfernen
 	--> status: DB aktuell

	alle Ordner, die in einer ini datei gespeichert werden, auslesen und dateien in array schreiben
		- Prüfsummen erstellen
		- exif datum auslesen
	--> status: array mit datenätzen wie DB2 von ordnern in ini
	
	datensätze vergleichen
	- alle datensätze die in db2 vorhanden werden aus array entfernt
	- restliche datensätze mit status NEU in DB2 schreiben
	-> status: db2 mit neuen datensätzen vorhanden

	neue daten verarbeiten
	-> alles datensätze mit neu auslesen 
	-> datei kopieren, umbenennen und verschieben
		
boa ey://
krass - jetz hab ich des abgeschrieben was ich auf dem zettel stehen hatte und werd nicht schlau draus :(



















_________________________________________________________________________________________________
_________________________________________________________________________________________________
_________________________________________________________________________________________________
_________________________________________________________________________________________________
_________________________________________________________________________________________________


konzept: verschiedene programme laufen zeitgleich

monatsersten um 00:01 Uhr
	-> Zielordner aus datei lesen														erledigt			--> 	000
	-> Zielordner (ablageordner) erstellen (jahr.monat)									erledigt			-->		001


ein mal früh um 3	
-> erste verarbeitung
	-> quell und zielordner aus datei lesen												erledigt			-->		002
	-> dateien aus quellordner lesen und pfade in datei schreiben 			Transfer über datei?			
	-> Prüfsumme der Datei errechnen 
	-> PrüfsummenDatei aufmachen und Werte lesen
	-> vorher errechnete prüfsumme mit ergebnis aus datei vergleichen und 
		-> vorhanden: prüfsumme wegschmeißen und datei in Dubletten verschieben
		-> nicht vorhanden: datei in den weiterverarbeitungsordner kopieren und prüfsumme in prüfsummendatei schreiben

ein mal früh um 4		
-> weiterverarbeitung
	-> datei aus weiterverarbeitungsordner lesen
	-> daten ermitteln und neuen namen kreieren
	-> Datei umbenennen und in ablageordner verschieben
	
_________________________________________________________________________________________________







